$date
  Sat May  2 14:53:13 2020
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module substractor4bits_tb $end
$var reg 4 ! a[3:0] $end
$var reg 4 " b[3:0] $end
$var reg 4 # d[3:0] $end
$var reg 1 $ bin $end
$var reg 1 % bout $end
$scope module uut $end
$var reg 4 & a[3:0] $end
$var reg 4 ' b[3:0] $end
$var reg 1 ( bin $end
$var reg 1 ) bout $end
$var reg 4 * d[3:0] $end
$var reg 1 + x_gt_y $end
$var reg 1 , x_eq_y $end
$var reg 1 - x_lt_y $end
$var reg 4 . greater[3:0] $end
$var reg 4 / smaller[3:0] $end
$var reg 3 0 bout_tmp[2:0] $end
$scope module cs_0 $end
$var reg 4 1 x[3:0] $end
$var reg 4 2 y[3:0] $end
$var reg 1 3 x_gt_y $end
$var reg 1 4 x_eq_y $end
$var reg 1 5 x_lt_y $end
$upscope $end
$scope module fs_0 $end
$var reg 1 6 a $end
$var reg 1 7 b $end
$var reg 1 8 bin $end
$var reg 1 9 d $end
$var reg 1 : bout $end
$upscope $end
$scope module fs_1 $end
$var reg 1 ; a $end
$var reg 1 < b $end
$var reg 1 = bin $end
$var reg 1 > d $end
$var reg 1 ? bout $end
$upscope $end
$scope module fs_2 $end
$var reg 1 @ a $end
$var reg 1 A b $end
$var reg 1 B bin $end
$var reg 1 C d $end
$var reg 1 D bout $end
$upscope $end
$scope module fs_3 $end
$var reg 1 E a $end
$var reg 1 F b $end
$var reg 1 G bin $end
$var reg 1 H d $end
$var reg 1 I bout $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b0001 !
b0001 "
b0000 #
0$
0%
b0001 &
b0001 '
0(
0)
b0000 *
0+
1,
0-
b0001 .
b0001 /
b000 0
b0001 1
b0001 2
03
14
05
16
17
08
09
0:
0;
0<
0=
0>
0?
0@
0A
0B
0C
0D
0E
0F
0G
0H
0I
#20000000
b0101 !
b0111 "
b0010 #
b0101 &
b0111 '
b0010 *
0,
1-
b0111 .
b0101 /
b0101 1
b0111 2
04
15
1;
1>
1@
1A
#100000000
b0000 !
b0000 "
b0000 #
b0000 &
b0000 '
b0000 *
1,
0-
b0000 .
b0000 /
b0000 1
b0000 2
14
05
06
07
0;
0>
0@
0A
