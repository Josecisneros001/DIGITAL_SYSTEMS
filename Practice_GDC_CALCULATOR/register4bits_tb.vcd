$date
  Sat May  2 14:21:37 2020
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module register4bits_tb $end
$var reg 4 ! d_in[3:0] $end
$var reg 4 " d_out[3:0] $end
$var reg 1 # clk $end
$var reg 1 $ ld $end
$var reg 1 % reset $end
$scope module uut $end
$var reg 4 & d_in[3:0] $end
$var reg 1 ' clk $end
$var reg 1 ( ld $end
$var reg 1 ) reset $end
$var reg 4 * d_out[3:0] $end
$scope module ff_d0 $end
$var reg 1 + clk $end
$var reg 1 , ld $end
$var reg 1 - d $end
$var reg 1 . reset $end
$var reg 1 / q $end
$upscope $end
$scope module ff_d1 $end
$var reg 1 0 clk $end
$var reg 1 1 ld $end
$var reg 1 2 d $end
$var reg 1 3 reset $end
$var reg 1 4 q $end
$upscope $end
$scope module ff_d2 $end
$var reg 1 5 clk $end
$var reg 1 6 ld $end
$var reg 1 7 d $end
$var reg 1 8 reset $end
$var reg 1 9 q $end
$upscope $end
$scope module ff_d3 $end
$var reg 1 : clk $end
$var reg 1 ; ld $end
$var reg 1 < d $end
$var reg 1 = reset $end
$var reg 1 > q $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
bUUUU !
bUUUU "
0#
U$
U%
bUUUU &
0'
U(
U)
bUUUU *
0+
U,
U-
U.
U/
00
U1
U2
U3
U4
05
U6
U7
U8
U9
0:
U;
U<
U=
U>
#20000000
b1010 !
1$
b1010 &
1(
1,
0-
11
12
16
07
1;
1<
#25000000
b1010 "
1#
1'
b1010 *
1+
0/
10
14
15
09
1:
1>
#50000000
0#
0'
0+
00
05
0:
#60000000
0$
0(
0,
01
06
0;
#75000000
1#
1'
1+
10
15
1:
#100000000
0#
0'
0+
00
05
0:
#120000000
b1000 !
b1000 &
02
#125000000
1#
1'
1+
10
15
1:
#130000000
1$
1(
1,
11
16
1;
#150000000
0#
0'
0+
00
05
0:
#175000000
b1000 "
1#
1'
b1000 *
1+
10
04
15
1:
#200000000
0#
0'
0+
00
05
0:
#225000000
1#
1'
1+
10
15
1:
#250000000
0#
0'
0+
00
05
0:
#275000000
1#
1'
1+
10
15
1:
#300000000
0#
0'
0+
00
05
0:
#325000000
1#
1'
1+
10
15
1:
#350000000
0#
0'
0+
00
05
0:
#375000000
1#
1'
1+
10
15
1:
#400000000
0#
0'
0+
00
05
0:
